apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-db
  template:
    metadata:
      labels:
        app: mysql-db
    spec:
      containers:
        - name: mysql-db
          image: mysql
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: setup-sql
              mountPath: /docker-entrypoint-initdb.d/setup.sql
          env:
            - name: MYSQL_DATABASE
              value: books
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: password
            - name: MYSQL_HOST
              value: localhost
      volumes:
        - name: setup-sql
          hostPath:
            path: ./setup.sql
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-db
spec:
  selector:
    app: mysql-db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: reddykarthikc/npm-server:latest
          ports:
            - containerPort: 80
          env:
            - name: MYSQL_HOST_IP
              value: mysql-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client
spec:
  replicas: 2
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
        - name: client
          image: reddykarthikc/npm-client:latest
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: adminer
spec:
  selector:
    app: mysql-db
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: api-loadbalancer
spec:
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: client-loadbalancer
spec:
  selector:
    app: client
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
